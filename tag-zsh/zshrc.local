#!/bin/zsh

# ZSH loads the following files in order on startup for interactive shells.
# /etc/zshenv
# ~/.zshenv
# /etc/zprofile
# ~/.zprofile
# /etc/zshrc
# ~/.zshrc
# /etc/zlogin
# ~/.zlogin



# This option is a variant of INC_APPEND_HISTORY in which, where possible, the
# history entry is written out to the file after the command is finished, so
# that the time taken by the command is recorded correctly in the history file
# in EXTENDED_HISTORY format. This means that the history entry will not be
# available immediately from other instances of the shell that are using the
# same history file.
setopt inc_append_history_time

autoload colors
if [[ "$terminfo[colors]" -gt 8 ]]; then
    colors
fi

function include () {
    if [[ -e "$1" ]]; then
        log-to-zsh-init-log "Sourcing $1"
        source "$1"
    else
        log-to-zsh-init-log "WARNING: didn't source $1"
    fi
}

function print-white() {
  echo "$fg[white]$1$reset_color"
}

function print-info() {
  print-white "$1"
}

function print-green() {
  echo "$fg[green]$1$reset_color"
}

function print-success() {
  local message="$1"
  print-green "ï€Œ  ${message}"
}

function print-red() {
  echo "$fg[red]$1$reset_color"
}

function print-error() {
  local message="$1"
  print-red "ERROR: ${message}"
}

function setup-env-variables() {
    include "${HOME}/.shell-common.sh"
}

function setup-zgen() {
    include "${DOTFILES_HOME}/vendor/zgen/zgen.zsh"

    if ! zgen saved; then

        # Provides syntax highlighting like the fish shell while typing
        # interactive commands.
        zgen load zsh-users/zsh-syntax-highlighting

        # k is a zsh script / plugin to make directory listings more readable,
        # adding a bit of color and some git status information on files and
        # directories.
        zgen load supercrabtree/k

        # More completion files for zsh.
        zgen load zsh-users/zsh-completions src

        # A Zsh plugin to help remembering those shell aliases and Git aliases
        # you once defined.  Prints a help line reminding you of an alias for a
        # command you typed.
        zgen load djui/alias-tips

        # Type in any part of any previously entered command and press the UP
        # and DOWN arrow keys to cycle through the matching commands.  Substring
        # search must load search after zsh-syntax-highlighting.
        zgen load zsh-users/zsh-history-substring-search

        # With zsh-async you can run multiple asynchronous jobs, enforce unique
        # jobs (multiple instances of the same job will not run), flush all
        # currently running jobs and create multiple workers (each with their
        # own jobs). For each worker you can register a callback-function
        # through which you will be notified about the job results (job name,
        # return code, output and execution time).
        zgen load mafredri/zsh-async

        zgen load rupa/z

        # Generate the init script from plugins above.
        zgen save
    fi
}

# Fix binding for delete key.
bindkey '^[[P' delete-char

function setup-gpg() {
    GPG_TTY=$(tty)
    export GPG_TTY
    log-to-zsh-init-log "Exported \$GPG_TTY as $GPG_TTY"
}

function setup-gpg-agent() {
    local hostUniqueName="$(hostname)"
    local lockFile="${HOME}/.gnupg/gpg-agent-info-${hostUniqueName}"
    local gpgAgentPid=$(cut -d: -f 2 "${lockFile}")
    local gpgAgentLog="${HOME}/.gnupg/gpg-agent-log"
    # kill -0 $PID tests if $PID is running.
    if test -f "${lockFile}" && kill -0 "${gpgAgentPid}" 2>/dev/null; then
        GPG_AGENT_INFO=$(< "${lockFile}")
        export GPG_AGENT_INFO
        local logMessage="gpg-agent already running, "
        logMessage+="exported \$GPG_AGENT_INFO as $GPG_AGENT_INFO"
        log-to-zsh-init-log "${logMessage}"
    else
        eval $(gpg-agent --daemon --write-env-file "${lockFile}" \
                         --log-file "${gpgAgentLog}")
        echo $GPG_AGENT_INFO > "${lockFile}"
        local logMessage="Started gpg-agent, "
        logMessage+="wrote \$GPG_AGENT_INFO to ${lockFile}"
        log-to-zsh-init-log "${logMessage}"
    fi
}


function reload-zshrc() {
    source ~/.zshrc.local
}

function reload-zshrc-profile() {
    ZSH_PROFILE_RC=1 reload-zshrc
    zprof | less
}

function setup-prompt() {
    # Disable grml prompt.
    prompt off
    include "${HOME}/.config/zsh/current-org-task.zsh"
    include "${HOME}/.config/zsh/prompt.zsh"
}

function reload-prompt() {
    include "${HOME}/.config/zsh/prompt.zsh"
}

# Package Setup

# Set keystrokes for substring searching
function setup-zsh-history-substring-search() {
    # OPTION 1: for most systems
    zmodload zsh/terminfo
    bindkey "$terminfo[kcuu1]" history-substring-search-up
    bindkey "$terminfo[kcud1]" history-substring-search-down

    # OPTION 2: for iTerm2 running on Apple MacBook laptops
    zmodload zsh/terminfo
    bindkey "$terminfo[cuu1]" history-substring-search-up
    bindkey "$terminfo[cud1]" history-substring-search-down

    ## EMACS mode ###########################################
    bindkey -M emacs '^P' history-substring-search-up
    bindkey -M emacs '^N' history-substring-search-down
}

# fzf is a general-purpose command-line fuzzy finder.
function setup-fzf() {
    local fzfPath="${HOME}/.dotfiles/vendor/fzf"

    # Auto-completion
    [[ $- == *i* ]] && include "${fzfPath}/shell/completion.zsh" 2> /dev/null

    # Key bindings
    include "${fzfPath}/shell/key-bindings.zsh"
}

# Setup NPM so we can install global packages without root.  See
# http://stackoverflow.com/questions/10081293.
function setup-npm() {
}

# Setup PATH and completion for gcloud.
function setup-gcloud() {
  include "${HOME}/google-cloud-sdk/path.zsh.inc"
  include "${HOME}google-cloud-sdk/completion.zsh.inc"
}

function setup-personal-packages() {
    include "${HOME}/.config/zsh/extract.zsh"
    include "${HOME}/.config/zsh/eslint.zsh"
    include "${HOME}/.config/zsh/finances.zsh"
    include "${HOME}/.config/zsh/utils.zsh"
    include "${HOME}/.config/zsh/spectrum.zsh"
    include "${HOME}/.config/zsh/updater.zsh"
    include "${HOME}/.config/zsh/test-fonts.zsh"
    include "${HOME}/.config/zsh/current-org-task.zsh"
}

setup-init-log
setup-env-variables
setup-zgen
setup-npm

# setup-gpg
# setup-gpg-agent
setup-zsh-history-substring-search
setup-prompt
setup-personal-packages
setup-fzf
setup-gcloud

alias g='git'
alias gRl='git remote --verbose'

alias kl='k -l'
alias ka='k -a'
alias kh='k -h'

alias rz='reload-zshrc'
# alias rp='reload-prompt'

alias hl='hledger -f ~/gdrive/financials/personal.ledger'

if alias | grep -q '^ag='; then
  # This grml alias conflicts with the platinum searcher.
  unalias ag
fi

include "${HOME}/.zsh-system.zsh"
