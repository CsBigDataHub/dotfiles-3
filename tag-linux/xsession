#!/bin/bash

# ~/.xsession is evaluated when selecting "custom session" when
# logging in.

# Prints a message for an information
function x11_print_info() {
  echo "INFO: $@"
}

# Prints a message for an error
function x11_print_error() {
  echo "ERROR: $@"
}

x11_print_info "Executing ~/.dotfiles/tag-linux/xsession"

# https://developer.gnome.org/gtk3/stable/gtk-x11.html

# HiDPI settings for GTK3+ applications Must be set to an integer,
# typically 2. If set, GDK will scale all windows by the specified
# factor.
export GDK_SCALE=2
# Useful when using scale-aware GTK+ applications together with
# scale-unaware applications on a high-dpi display
# export GDK_DPI_SCALE=0.5


# HiDPI settings for QT applications
export QT_AUTO_SCREEN_SCALE_FACTOR=1

# Necessary to make chrome pick up the proxy settings stored in gconf.
export DESKTOP_SESSION=cinnamon

# NOTE: This may break your compose key.
# See http://g/i3-users/YBexXGbik7E for more details.
export GTK_IM_MODULE=xim


# Start dbus daemon
export $(dbus-launch)
eval $(ssh-agent -s)


# Compositor vsync and tear-free.
function x11_compositor() {
  exec /usr/bin/compton --config .config/compton.conf -b &
}

# Sets the cursor.
function x11_cursor() {
  x11_print_info 'Configuring XCursor theme and size...'
  xsetroot -cursor_name left_ptr

  # export XCURSOR_THEME=Breeze-Obsidian
  # export XCURSOR_SIZE=16
  # xsetroot -xcf "${HOME}/.icons/${XCURSOR_THEME}/cursors/left_ptr" "${XCURSOR_SIZE}" &
  # xsetroot -cursor_name left_ptr &
}

function x11_cursor_unclutter() {
  if [[ ! -x /usr/bin/unclutter ]]; then
    x11_print_error "unclutter command not found."
    return 1
  fi
  unclutter -v 2>&1 | grep -q xfixes
  if [[ $? -ne 0 ]]; then
     x11_print_error "Using old unclutter.  Install unclutter-xfixes."
     return 1
  fi
  x11_print_info 'Launching unclutter in background...'
  /usr/bin/unclutter --timeout 3 --ignore-scrolling --fork  ||
     x11_print_error "Failed to launch unclutter"
}

# Handles themes, starts gnome-screensaver. You may have to use gconf to disable
# it setting the background.
function x11_gnome() {
  x11_print_info 'Launching gnome-settings-daemon...'
  if [[ ! -x /usr/bin/gnome-settings-daemon ]]; then
    x11_print_error "gnome-settings-daemon command not found."
    return
  fi
  (gnome-settings-daemon ||
     x11_print_error "Failed to launch gnome-settings-daemon") &
}

function x11_file_manager() {
  x11_print_info 'Launching thunar file manager as daemon...'
  if [[ ! -x /usr/bin/thunar ]]; then
    x11_print_error "thunar command not found."
    return
  fi
  (thunar --daemon || x11_print_error "Failed to launch Thunar") &
}

# Ensures the font directory is indexed.
function x11_fonts() {
  local font_dir="$HOME/.local/share/fonts"
  if [[ -d "${font_dir}" ]]; then
    x11_print_info 'Indexing personal fonts...'
    xset +fp "${font_dir}"
    xset fp rehash
  fi
}

function x11_notifications() {
  x11_print_info 'Launching dunst notification daemon...'
  if [[ ! -x /usr/bin/dunst ]]; then
    x11_print_error "dunst command not found."
    return
  fi
  exec dunst &
}

function x11_redshift() {
  if [[ -x '/usr/bin/redshift' ]]; then
    x11_print_info 'Loading redshift...'
    local californiaLatLong='37.638:-122.387'
    exec /usr/bin/redshift -l "$californiaLatLong" &
  fi
}

# Loads system specific settings.
function x11_system() {
    x11_print_info 'Loading system-specific X11 scripts...'
  if [[ -f "$HOME/.config/X11/xsession-system" ]]; then
    source "$HOME/.config/X11/xsession-system" ||
      x11_print_error 'Failed to load system-specific X11 scripts.'
  fi
}

# Randomizes the wallpaper at set intervals.
function x11_wallpaper() {
  if [[ ! -x '/usr/bin/feh' ]]; then
    x11_print_error "feh not found."
    return
  fi
  local wallpaperHome="${WALLPAPER_HOME:=$HOME/.config/wallpapers}"
  feh --randomize --bg-fill "${wallpaperHome}"
}

# Loads system specific settings.
function x11_system() {
  if [[ -f "$HOME/.config/X11/xsession-system" ]]; then
    x11_print_info 'Loading system-specific (non-rc) X11 scripts...'
    source "$HOME/.config/X11/xsession-system" ||
      x11_print_error 'Failed to load system-specific (non-rc) X11 scripts.'
  fi
}


# Disables the audible bell.
xset -b

x11_compositor
x11_cursor
x11_cursor_unclutter
x11_gnome
x11_file_manager
x11_fonts
x11_notifications
x11_redshift
x11_system
x11_wallpaper

# exec --no-startup-id nm-applet
# exec --no-startup-id i3-msg "workspace 6; append_layout ~/.config/i3/code-workspace.json"
# Normally, we should be able to run tmux directly with `st -e tmux`, but that
# doesn't allow true-color for some reason.  Instead, it falls back to 256-color
# mode.  So, we hack around it by starting a interactive zsh, which then runs a
# script which invokes tmux.
# exec --no-startup-id "st -e /bin/zsh -i ~/.config/i3/run-tmux.sh"

bash "${HOME}/.dotfiles-work/host-jschaf0.mtv.corp.google.com/bin/work-4k-setup.sh "
x11_print_info "Finished executing ~/.dotfiles/tag-linux/xsession. About to start i3."
# Start the window manager.
exec i3 > $HOME/.i3-error-log.txt 2>&1
